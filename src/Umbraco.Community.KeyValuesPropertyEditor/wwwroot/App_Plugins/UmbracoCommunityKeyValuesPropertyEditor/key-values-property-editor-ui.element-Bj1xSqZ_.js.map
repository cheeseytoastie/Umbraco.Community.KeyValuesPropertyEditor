{"version":3,"file":"key-values-property-editor-ui.element-Bj1xSqZ_.js","sources":["../../../Client/src/propertyeditors/key-values-property-editor-ui.element.ts"],"sourcesContent":["import { LitElement, css, html, customElement, property, state, query, repeat } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\n//import { umbConfirmModal } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbPropertyEditorUiElement } from \"@umbraco-cms/backoffice/property-editor\";\r\nimport { UmbPropertyValueChangeEvent } from \"@umbraco-cms/backoffice/property-editor\";\r\n\r\n/*\r\nThis is a work in progress\r\n\r\nWHAT WORKS NOW\r\n* You can add, delete and update items - the save and publish stores to the db and it loads.\r\n* I do check for a new property so that it works to add the first item\r\n\r\nTODO:\r\n1) I can't work out how I'd init _items (tried in the constructor but it's empty there?) as I'm unclear on how this.value is populated in the first place - I seem to declare it and it's magically assigned (perhaps in UmbPropertyEditorUiElement?)\r\n2) Sorter\r\n3) Check the key is unique and not null on add (perhaps a nice config option)\r\n4) Maybe a backend property type convertor. - if we use a key value pair then recheck items are unique - what to do if some junk duplicates are there?\r\n5) Style and tidy up\r\n6) Fix the constructor - init the _items?\r\n7) Use an umbraco confirm dialog - didn't seem to have the host / controller \r\n*/\r\n\r\n// todo - should these be here or inside the custom element\r\ntype UmbCommunityKeyValue = {\r\n  key: string;\r\n  value: string;\r\n};\r\ntype ArrayOf<T> = T[];\r\n\r\n@customElement('key-values-property-editor-ui')\r\nexport default class UmbCommunityKeyValuesPropertyEditorUIElement extends LitElement implements UmbPropertyEditorUiElement {\r\n\r\n  @property()\r\n  public value: ArrayOf<UmbCommunityKeyValue> = [];\r\n\r\n  /* this isn't used at the moment - how to init with the values from value ? */\r\n  @state()\r\n  private _items: ArrayOf<UmbCommunityKeyValue> = [];\r\n\r\n  @query('#key-value-new-key')\r\n  newNameInp!: HTMLInputElement;\r\n\r\n  @query('#key-value-new-value')\r\n  newValueInp!: HTMLInputElement;\r\n\r\n  //#host: UmbControllerHost;\r\n\r\n  constructor(value: ArrayOf<UmbCommunityKeyValue> = [], host: UmbControllerHost) {\r\n    super();\r\n\r\n    //this.#host = host;  // host is undefined.\r\n    console.log(host);\r\n\r\n    // this is empty there - so how do I assign this.value to the _items on \"init\"?\r\n    this._items = value;\r\n    console.log(this._items.length);\r\n  }\r\n\r\n\r\n  #onAddRow() {\r\n    const currentInputTyped: UmbCommunityKeyValue = {\r\n      key: this.newNameInp.value,\r\n      value: this.newValueInp.value\r\n    };\r\n\r\n    // check the value is an array, the concatenate o/w create an array with this as the first item\r\n    // todo - update to use this._items not value when the items is set on init.\r\n    this._items = Array.isArray(this.value) ? [...this.value, currentInputTyped] : [currentInputTyped];\r\n\r\n    this.#updatePropertyEditorValue();\r\n  }\r\n\r\n  #onDelete(index: number) {\r\n    // todo - can't get the host to use the umbConfirmModal here - what should it be?\r\n    // await umbConfirmModal(this.#host, {\r\n    //   headline: `Delete ${this.value || 'item'}`,\r\n    //   content: 'Are you sure you want to delete this item?',\r\n    //   color: 'danger',\r\n    //   confirmLabel: 'Delete',\r\n    // });\r\n   \r\n    // hack use a confirm yes no dialog for now\r\n    if (confirm(\"Are you sure you want to delete this item?\")) {\r\n      this._items = [...this._items.slice(0, index), ...this._items.slice(index + 1)];\r\n      this.#updatePropertyEditorValue();\r\n    }\r\n  }\r\n\r\n  private _onEditRowValue(e: InputEvent, index: number) {\r\n    let currentItem = this._items[index];\r\n\r\n    const updatedItem: UmbCommunityKeyValue = {\r\n      key: currentItem.key,\r\n      value: (e.target as HTMLInputElement).value\r\n    };\r\n\r\n    this._items = [...this._items.slice(0, index), updatedItem, ...this._items.slice(index + 1)];\r\n\r\n    this.#updatePropertyEditorValue();\r\n  }\r\n\r\n  #updatePropertyEditorValue() {\r\n    this.value = this._items;\r\n    this.dispatchEvent(new UmbPropertyValueChangeEvent());\r\n  }\r\n\r\n  renderItemsList() {\r\n    // this is a simple example of just writing out the values - to be replaced with the fields below\r\n    // todo - remove this hack when when assigning value to _items issue fixed\r\n    if (this._items.length === 0 && this.value?.length !== 0) {\r\n      this._items = this.value;\r\n    }\r\n\r\n    if (this._items?.length) {\r\n      return html`\r\n      <ul>\r\n        ${repeat(this._items, (item) => item.key, (item, index) => html`\r\n            <li>\r\n              <input type=\"text\" name=\"${index}\" value=\"${item.key}\" disabled=\"disabled\"></input>\r\n              <input type=\"text\" name=\"${index}\" value=\"${item.value}\" @input=${(e: InputEvent) => this._onEditRowValue(e, index)}></input>\r\n              <uui-button\r\n\t\t\t\t\t\t    compact\r\n\t\t\t\t\t\t    color=\"danger\"\r\n\t\t\t\t\t\t    label=\"remove ${item.key}\"\r\n\t\t\t\t\t\t    look=\"outline\"\r\n\t\t\t\t\t\t    @click=${() => this.#onDelete(index)}>\r\n\t\t\t\t\t\t    <uui-icon name=\"icon-trash\"></uui-icon>\r\n\t\t\t\t\t    </uui-button>\r\n            </li> `\r\n      )\r\n        }\r\n      </ul>`;\r\n    } else {\r\n      return html`<span>create an item</span>`;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n        ${this.renderItemsList()}\r\n            <span>Add a new item</span>\r\n            <uui-input\r\n                id=\"key-value-new-key\"\r\n                class=\"element\"\r\n                label=\"text input\"\r\n                value=\"\"\r\n            >\r\n            </uui-input>\r\n            <uui-input\r\n                id=\"key-value-new-value\"\r\n                class=\"element\"\r\n                label=\"text input\"\r\n                value=\"\"\r\n            >\r\n            </uui-input>\r\n            <div id=\"wrapper\">\r\n                <uui-button\r\n                    id=\"add-row-button\"\r\n                    class=\"element\"\r\n                    look=\"primary\"\r\n                    label=\"Add a row\"\r\n                    @click=${this.#onAddRow}\r\n                >\r\n                    Add a key value item\r\n                </uui-button>\r\n            </div>\r\n        `;\r\n  }\r\n\r\n  static styles = [\r\n    css`\r\n            #wrapper {\r\n                margin-top: 10px;\r\n                display: flex;\r\n                gap: 10px;\r\n            }\r\n            .element {\r\n                width: 100%;\r\n            }\r\n        `,\r\n  ];\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'key-values-property-editor-ui': UmbCommunityKeyValuesPropertyEditorUIElement;\r\n  }\r\n}\r\n"],"names":["_UmbCommunityKeyValuesPropertyEditorUIElement_instances","onAddRow_fn","onDelete_fn","updatePropertyEditorValue_fn","UmbCommunityKeyValuesPropertyEditorUIElement","LitElement","value","host","__privateAdd","index","updatedItem","__privateMethod","_a","_b","html","repeat","item","e","currentInputTyped","UmbPropertyValueChangeEvent","css","__decorateClass","property","state","query","customElement"],"mappings":"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"}